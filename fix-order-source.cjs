#!/usr/bin/env node

// ููู ุฅุตูุงุญ ุณุฑูุน ููุดููุฉ ุนุฑุถ ูุตุฏุฑ ุงูุทูุจ
console.log('๐ง ุจุฏุก ุฅุตูุงุญ ูุดููุฉ ูุตุฏุฑ ุงูุทูุจ...');

// ุงูุชุญูู ูู ุฃู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุชุญุชูู ุนูู ุงูุจูุงูุงุช ุงูุตุญูุญุฉ
const { Pool } = require('pg');
const pool = new Pool({
  connectionString: 'postgres://sanad:yaserxp1992@127.0.0.1:5432/sanadi_db'
});

async function checkOrderSources() {
  try {
    console.log('๐ ูุญุต ูุตุงุฏุฑ ุงูุทูุจุงุช ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช...');
    
    const result = await pool.query(`
      SELECT order_number, customer_name, order_source, source_details 
      FROM landing_page_orders 
      WHERE order_source != 'landing_page' AND order_source IS NOT NULL
      ORDER BY created_at DESC 
      LIMIT 5
    `);
    
    console.log(`โ ุชู ุงูุนุซูุฑ ุนูู ${result.rows.length} ุทูุจุงุช ูุน ูุตุงุฏุฑ ูุฎุตุตุฉ:`);
    
    result.rows.forEach(row => {
      console.log(`  ๐ฆ ุทูุจ #${row.order_number}: ${row.customer_name}`);
      console.log(`     ๐ ุงููุตุฏุฑ: ${row.order_source}`);
      console.log(`     ๐ ุงูุชูุงุตูู: ${row.source_details || 'ูุง ุชูุฌุฏ'}`);
      console.log('');
    });
    
    console.log('๐ฏ ุงููุดููุฉ: API ูุง ูุฑุฌุน ูุฐู ุงูุจูุงูุงุช ุจุณุจุจ ุนุฏู ุชุญุฏูุซ ุงูุฎุงุฏู');
    console.log('๐ก ุงูุญู: ุฅุนุงุฏุฉ ุชุดุบูู ุงูุฎุงุฏู ุงูุฑุฆูุณู ุจุงูููุฏ ุงููุญุฏุซ');
    
  } catch (error) {
    console.error('โ ุฎุทุฃ:', error.message);
  } finally {
    await pool.end();
  }
}

checkOrderSources();
